{
  "name": "cartodb",
  "description": "CartoDB Node.js client library",
  "private": false,
  "version": "0.2.1",
  "main": "index",
  "url": "https://github.com/Vizzuality/cartodb-nodejs",
  "licenses": [
    {
      "type": "BSD"
    }
  ],
  "repository": [
    {
      "type": "git",
      "url": "git://github.com/Vizzuality/cartodb-nodejs.git"
    }
  ],
  "author": {
    "name": "Simon Tokumine, Vizzuality",
    "email": "simon@vizzuality.com",
    "url": "https://github.com/Vizzuality/cartodb-nodejs"
  },
  "contributors": [
    {
      "name": "Dan Zajdband",
      "email": "dan.zajdband@gmail.com"
    },
    {
      "name": "Javi Santana",
      "email": "jsantana@vizzuality.com"
    }
  ],
  "dependencies": {
    "superagent-oauth": "~0.2.3",
    "debug": "~0.7.2",
    "oauth": "~0.9.8",
    "superagent": "~0.12.4"
  },
  "devDependencies": {
    "mocha": "~1.8.1"
  },
  "scripts": {
    "test": "make test"
  },
  "readme": "CartoDB client for node.js\n=================================\n\nThis library allows to perform async read/write queries to cartodb.\n\nInstall\n------\n\n```bash\nnpm install cartodb\n```\n\n\nUsage\n-----\n\nThe library provides two auth ways, oauth client and api key client. Both  have the same funcionallity and you should choose one of them depending on you requirements. \n\n```javascript\nvar CartoDB = require('cartodb');\nvar secret = require('./secret.js');\n\n\n/* you could change this providing an api_key instead of consumer key / secret if you want to use oath\nclient = new CartoDB({\n       user: secret.USER,\n       password: secret.password,\n       consumer_key: secret.CONSUMER_KEY, \n       consumer_secret: secret.CONSUMER_SECRET\n});\n*/\nvar client = new CartoDB({user: secret.USER,api_key: secret.API_KEY});\n\nclient.on('connect', function() {\n    console.log(\"connected\");\n\n    // template can be used\n    client.query(\"select * from {table} limit 5\", {table: 'tracker'}, function(err, data){\n    // JSON parsed data or error messages are returned\n    })\n\n    // chained calls are allowed\n    .query(\"select * from tracker limit 5 offset 5\", function(err, data){});\n});\n\n// client is a Stream object instance so you can pipe responses as new line delimited JSON, for example, to a file\n\nvar output = require('fs').createWriteStream(__dirname + '/responses.log');\nclient.pipe(output);\n\nclient.connect();\n\n```\n\nCartoDB-nodejs implements visionmedia's debug library. You can see what's happening with the requests via an environment variable\n```\nDEBUG=cartodb node yourscript.js\n```\n\nDependencies\n------------\n* nodejs >=0.6.0\n* CartoDB account\n\n",
  "readmeFilename": "README.md",
  "_id": "cartodb@0.2.1",
  "dist": {
    "shasum": "3b0c078c54383a808204bab64ca9e007311a4896"
  },
  "_from": "cartodb@",
  "_resolved": "https://registry.npmjs.org/cartodb/-/cartodb-0.2.1.tgz"
}
