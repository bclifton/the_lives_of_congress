program = require "commander"
childProcess = require "child_process"
util = require "util"
yieutil = require "yieutil"
_ = require "underscore"
colors = require "colors"
fs = require "fs"
ejs = require "ejs"

program
  .version("0.0.1")
  .option("-C, --chdir <path>", "change the working directory")
  .option("-c, --config <path>", "set config path. defaults to ./deploy.conf")
  .option("-T, --no-tests", "ignore test hook")
  
program
  .command("server")
  .description("start server")
  .action (args) ->
    Server = require("../lib/hookio-l").Server
    
    server = new Server
      name: "l"
      debug: on
      
    server.start()
    
program
  .command("init")
  .description("initialize application")
  .action () ->
    program.prompt "project name for npm and github: ", (projectName) ->
      projectName = projectName.trim()
      program.prompt "app name for lib and bin: (#{projectName}) ", (appName) ->
        appName = appName.trim()
        if appName is "" then appName = projectName
        program.prompt "version: (0.0.1) ", (version) ->
          version = version.trim()
          if version is "" then version = "0.0.1"
          program.prompt "description: (*) ", (description) ->
            description = description.trim()
            program.prompt "homepage: (*) ", (homepage = "0.0.1") ->
              homepage = homepage.trim()
              program.prompt "username for github: ", (username = "0.0.1") ->
                username = username.trim()
                program.prompt "author: ", (author) ->
                  author = author.trim()
                  program.prompt "email: ", (email) ->
                    email = email.trim()
                    program.prompt "url: ", (url) ->
                      url = url.trim()
                      fs.mkdir "#{projectName}", 0777, (error) ->
                        if error?
                          console.log "create folder #{projectName}: ".grey + "error".red
                          throw error
                        console.log "create folder #{projectName}: ".grey + "done".green
                        fs.readFile __dirname + "/../template/app/package.json", "utf8", (error, data) ->
                          if error?
                            console.log "create file #{projectName}/#{appName}-cli: ".grey + "failed".red
                            throw error
                          data = ejs.render data,
                            locals:
                              projectName: projectName
                              appName: appName
                              version: version
                              description: description
                              homepage: homepage
                              username: username
                              author: author
                              email: email
                              url: url
                          
                          fs.writeFile "#{projectName}/package.json", data, "utf8", (error) ->
                            if error?
                              console.log "create file #{projectName}/#{appName}: ".grey + "failed".red
                              throw error
                            console.log "create file #{projectName}/#{appName}: ".grey + "done".green
                          
                        
                        
                          ###
                          yieutil.executeCommand "ls -la",
                            display: yes
                            stdout: (data) ->
                              process.stdout.write data.cyan
                            complete: (code) ->
                          ###
                          #process.stdin.destroy()
                  
program
  .command("test")
  .description("run tests")
  .action ->
    process.chdir __dirname + "/.."
    yieutil.executeCommand "node test/all.js"
    
program
  .command("*")
  .description("deploy the given env")
  .action (env)->
    console.log "deploying \"%s\"", env
    
program.parse process.argv