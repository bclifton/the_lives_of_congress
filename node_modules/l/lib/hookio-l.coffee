Hook = require("hook.io").Hook
express = require "express"
path = require "path"

exports.Server = class Server extends Hook
  constructor: (options) ->
    super options
    
    @on "hook::ready", =>
      
      app = module.exports = express.createServer()
      sessionStore = new express.session.MemoryStore()
      
      app.configure ->
        app.set "views", __dirname + "/../views"
        app.set "view engine", "coffee"
        app.set "view options"
          layout: no
        app.register ".coffee", require("coffeekup").adapters.express
        app.use express.bodyParser()
        app.use express.methodOverride()
        app.use express.cookieParser()
        app.use express.session
          store: sessionStore
          secret: "secret"
          key: "express.sid"
        app.use app.router
        app.use "/", express.static __dirname + "/../public"
        app.use "/", express.static __dirname + "/../docs"
        app.use "/vendor", express.static __dirname + "/../vendor"
        
      app.configure "development", ->
        app.use express.errorHandler
          dumpExceptions: yes
          showStack: yes
          
      app.configure "production", ->
        app.use express.errorHandler()
        
      app.get "/doc", (req, res, next) ->
        res.sendfile path.normalize __dirname + "/../docs/Statemachine.spec.html"
        
      app.get "/", (req, res, next) ->
        res.render "index"
          title: config.title
          scripts: [
            "app"
          ],
          stylesheets: [
          ]
          
      app.listen process.env.C9_PORT or 80
      console.log "Express server listening on port %d in %s mode", app.address().port, app.settings.env